[tool.isort]
profile = "black"
skip_glob = "*migrations*"

[tool.ruff]
exclude = [
    "migrations"
]
select = [
    "B",   # flake8-bugbear
    "C90", # mccabe
    "D",   # pydocstyle
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "T20", # flake8-print
    "W",   # pycodestyle warnings
]
ignore = [
    "B008", # do not perform function call in argument defaults
    "D100", # missing docstring in public module
    "D101", # missing docstring in public class
    "D102", # missing docstring in public method
    "D103", # missing docstring in public function
    "D104", # missing docstring in public package
    "D105", # missing docstring in magic method
    "D106", # missing docstring in public nested class
    "D107", # missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # multi-line docstring summary should start at the first line
]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.per-file-ignores]
"__init__.py" = [
    "F401" # imported but unused
]

[tool.mypy]
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
ignore_missing_imports = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true
show_column_numbers = true
plugins = "pydantic.mypy"
exclude = [
    "migrations"
]

[tool.pylint.main]
ignore = "migrations"
extension-pkg-whitelist = [
    "orjson",
    "pydantic"
]

[tool.pylint.format]
max-line-length = 88

[tool.pylint."messages control"]
disable = [
    "duplicate-code",
    "fixme",
    "import-error",
    "invalid-name",
    "missing-docstring",
    "too-few-public-methods",
    "too-many-arguments"
]

[tool.pylint.similarities]
ignore-imports = "yes"

[tool.pytest.ini_options]
addopts = "-vvv -rF --cov=app"
log_level = "INFO"

[tool.coverage.run]
# Fixes the problem with misses coverage lines after await
# Described here: https://github.com/nedbat/coveragepy/issues/1082
concurrency = [
    "greenlet"
]

[tool.coverage.report]
omit = [
   "*/tests/*",
   "**/__init__.py",
   "app/celery/worker.py"
]
exclude_lines = [
    "pragma: no cover",
    "if typing.TYPE_CHECKING:"
]
fail_under = 100
show_missing = true

[tool.bandit]
exclude_dirs = [
    "migrations",
    "tests"
]
