services:
  postgres:
    restart: always
    image: postgres:14.2-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_PORT: ${DATABASE_PORT}
      POSTGRES_DB: ${DATABASE_NAME}

  backend:
    build:
      context: ../../
      dockerfile: config/backend/Dockerfile
    depends_on:
      - postgres
      - redis
    ports:
      - "8000:8000"
    volumes:
      - $PWD/backend:/backend
    env_file:
      - .env

  frontend:
    build:
      context: ../../
      dockerfile: config/frontend/Dockerfile
    depends_on:
      - backend
    volumes:
      - $PWD/frontend/src:/frontend/src
      - $PWD/frontend/public:/frontend/public
    environment:
      - BROWSER=none
      - CI=true
    env_file:
      - .env

  nginx:
    build:
      context: ../../
      dockerfile: config/nginx/Dockerfile.dev
    depends_on:
      - backend
      - frontend
    ports:
      - "3000:80"
    volumes:
      - $PWD/config/nginx/nginx.conf:/var/nginx.conf
    env_file:
      - .env

  celery:
    build:
      context: ../../
      dockerfile: config/backend/Dockerfile
    depends_on:
      - postgres
      - redis
    volumes:
      - $PWD/backend:/backend
    env_file:
      - .env
    command: "celery -A app.celery worker -l INFO"

  celery-beat:
    build:
      context: ../../
      dockerfile: config/backend/Dockerfile
    depends_on:
      - postgres
      - redis
    volumes:
      - $PWD/backend:/backend
    env_file:
      - .env
    command: "celery -A app.celery beat -l INFO"

  flower:
    image: mher/flower
    ports:
      - "8888:8888"
    env_file:
      - .env

  redis:
    image: redis:7.0.0
    ports:
      - "6379:6379"
