version: "3.9"

services:
  postgres:
    restart: always
    image: postgres:14.1-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_HOST: ${DATABASE_HOST}
      POSTGRES_PORT: ${DATABASE_PORT}
      POSTGRES_DB: ${DATABASE_NAME}

  backend:
    build:
      context: .
      dockerfile: config/backend.Dockerfile
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/backend
    ports:
      - "8000:80"
    env_file:
      - .env

  frontend:
    build:
      context: .
      dockerfile: config/frontend.Dockerfile
    depends_on:
      - backend
    volumes:
      - ./frontend/src:/frontend/src
      - ./frontend/public:/frontend/public

  celery:
    build:
      context: .
      dockerfile: config/backend.Dockerfile
    command: "celery -A app.celery worker -l INFO"
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: config/backend.Dockerfile
    command: "celery -A app.celery beat -l INFO"
    volumes:
      - ./backend:/backend
    depends_on:
      - postgres
      - redis
    env_file:
      - .env

  flower:
    image: mher/flower
    env_file:
      - .env
    ports:
      - 8888:8888

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASSWORD}
